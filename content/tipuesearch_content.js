var tipuesearch = {"pages": [{'title': 'introduction', 'text': 'Group\xa0website:  stage1 \n \xa0 \xa0 \xa0respostory:\xa0 \n Group\xa0website:  stage2 \n \xa0 \xa0 \xa0respostory: \n Group member \n 40823111\xa0  許耀中 \n 40823120\xa0  范維倫 \n 40823124\xa0  廖璟承 \n 40823139\xa0  王銘楫 \n', 'tags': '', 'url': 'introduction.html'}, {'title': 'week', 'text': '', 'tags': '', 'url': 'week.html'}, {'title': 'week6', 'text': '題目 :\xa01.棒球打擊模擬 \n \n 一個平台(棒球場) 球打出去後可以接球(防守者) 漏接的球可以自動流回輸送台，再次被送回來 \n 使用類似螺紋的概念把球輸送到想要的平台 \n 希望可以把球的軌跡沿著螺旋線上升 \n 做成一個循迴機構 \n \n 主要物件: 2隻機械手臂(王銘楫和廖璟承) 平台和送球機構(許耀中和范維倫) \n', 'tags': '', 'url': 'week6.html'}, {'title': 'week7', 'text': '', 'tags': '', 'url': 'week7.html'}, {'title': 'CoppeliaSim模擬與運送機構創建', 'text': '整體運用重點: \n \n 向本週主軸:CoppeliaSim模擬與運送機構創建 \n \n 整體運用重點: \n \n IK逆運動學 \n 正向運動學 \n 送球機構創建 \n \n 本週問題: \n \n 多軸手臂的運動預測 \n 送球機構創建未果 \n 球受力後的運動路徑預測 \n \n 問題改善: \n \n 藉由DH法做運動預期 \n 加入運動學運算 \n \n \n', 'tags': '', 'url': 'CoppeliaSim模擬與運送機構創建.html'}, {'title': 'CoppeliaSim模擬 手動操控機械手臂', 'text': '整體運用重點: \n \n 向本週主軸:CoppeliaSim模擬與運送機構創建 \n \n 整體運用重點: \n \xa0 \xa0 \xa01.lua 產生路徑 \n \xa0 \xa0 \xa02. 鍵盤ASCII控制字符 \n 本週問題: \n \xa0 \xa0 \xa01. 控制關節時，每個關節所設置的位置與阻尼參數不同，會有抖動的情形發生 \n \xa0 \xa0 \xa02.關節2的部分因為承受整隻手臂的絕大重量，所以轉動到了一定角度後會因為自身重量而倒下 \n 問題改善: \n \xa0 \xa0 1. 所有的參數都設成一樣的並把馬達改成控制模式 \n \xa0 \xa0 2.每隻關節都設置了轉動條件，限制轉動的次數，且設置了兩個參數控制互鎖，並用自身相加方式達成\xa0 \xa0 \xa0 \xa0 可以重複接收訊號，另外關節2在關節與程式另有限制轉動的角度跟輸入次數，當按下按鍵一定次數\xa0 \xa0 \xa0 \xa0 \xa0 後 必須往反方向轉動，否則互鎖。 \n \n \n \n', 'tags': '', 'url': 'CoppeliaSim模擬 手動操控機械手臂.html'}, {'title': '機械結構', 'text': '第一次模擬 →\xa0失敗 \n \n 遇到問題: \n 因為我們是設計螺旋線的上升機構， 所以到輸送平台時把它用直線，導致不符合公差尺寸而跑掉 \n 解決1.\xa0 改善後 把它改成符合螺旋線的入口 \n 改善前 \n \n 改善後 \n \n \n \n', 'tags': '', 'url': '機械結構.html'}, {'title': 'week8', 'text': '本週主軸:機械手臂程式撰寫與送球機構修改 \n 整體運用重點: \n \n Lua語言 \n \n 本週問題: \n \n 送球機構運動結果未達預期 \n 球到達定點前即掉落 \n 手臂運動路徑不夠近似真實擊球 \n \n 問題改善: \n \n 擋板修改 \n 修改至接近真人手臂擊球的動作 \n \n', 'tags': '', 'url': 'week8.html'}, {'title': '機械手臂程式', 'text': "\n \n threadFunction=function()\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do\n        -- Read the keyboard messages (make sure the focus is on the main window, scene view):\n        message,auxiliaryData=sim.getSimulatorMessage()\n        while message~=-1 do\n            if (message==sim.message_keypress) then\n                if (auxiliaryData[1]==97) then\n                    -- d key\n                    if(o < i*10) then\n                    o = o+i\n                    velocity=velocity+0.11\n                    torque=torque+0.1\n                    hammer_back = 0\n                    end\n                end\n                if (auxiliaryData[1]==100) then\n                    -- a key \n                    if(o > -i*10) then\n                    o = o-i\n                    velocity=velocity-0.11\n                    torque=torque-0.1\n                    hammer_back = 1\n                    end\n                end\n                \n            end\n            message,auxiliaryData=sim.getSimulatorMessage()\n        end\n \n        -- We take care of setting the desired hammer position:\n        if hammer_back == 1\n            then \n               sim.setJointPosition(joint, -1, orientation)\n               --sim.setObjectPosition(hammer,-1, position)\n        end\n        sim.setJointTargetPosition(joint, velocity)\n        --sim.setJointForce(joint,torque)\n\n        -- Since this script is threaded, don't waste time here:\n        sim.switchThread() -- Resume the script at next simulation loop start\n    end\nend\n-- Put some initialization code here:\n-- Retrieving of some handles and setting of some initial values:\ni = 1\no = i*1\njoint=sim.getObjectHandle('redundantRob_joint1')\nhammer=sim.getObjectHandle('Rectangle')\nvelocity=0\nhammer_back=0\ntorque=0\nsliding = 0\norientation=sim.getJointPosition(joint, -1)\nposition=sim.getObjectPosition(hammer,-1)\n-- Here we execute the regular thread code:\nres,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)\nif not res then\n    sim.addStatusbarMessage('Lua runtime error: '..err)\nend\n \n-- Put some clean-up code here:\n \n", 'tags': '', 'url': '機械手臂程式.html'}, {'title': 'week9', 'text': '重點總結 \n \n 機器手臂運動 \n 運動學 \n Lua程式認知 \n 送球機構修改 \n \n 專案檢討 \n \n 同步情形略有改善 \n 分工領域較上次精確 \n 預想模型較上次合理 \n 協同增加分工的效率 \n \n 總結: \n 此次專案較stage-1分工更加明確，各領域負責者各司其職，並未因人數增加而導致部分人員偷懶。 \n 在具有stage-1的基礎知識之下，研讀其他文獻時理解也更加快速! \n 機構預想上較stage-1更加縝密，減少了過於理想化的情況，也因此修改的時間花費更少。 \n', 'tags': '', 'url': 'week9.html'}, {'title': '成品', 'text': '\n \n', 'tags': '', 'url': '成品.html'}]};